#!/usr/bin/env bash -oeu pipefail

function main {
    case "${1:-}" in
        count)      count_unscheduled_gifs ;;
        un*)        list_unscheduled_gifs ;;
        [0-9]*)     list_scheduled_gifs "$@" ;;
        *)          list_scheduled_gifs 30 "$@" ;;
    esac
}

function list_scheduled_gifs {
    local count="$1"
    local days=''
    local empty=''
    local full=''

    shift
    while [ "${1:-}" ]; do
        case "${1:-}" in
            empty)  empty=empty full=''  ;;
            full)   full=full   empty='' ;;
            *)      [ -n "$days" ] && days="$days|$1" || days="$1"
        esac
        shift
    done

    for day in $(seq 0 ${count}); do
        datestamp=$(gdate +'%Y-%m-%d' --date="now $day days")
        day=$(gdate +%a --date $datestamp)

        [ -n "$days" ] \
            && echo "$day" | egrep -iqv "$days" \
            && continue

        content=$(
            ( ag published.*$datestamp source || echo '' ) \
                | cut -d: -f1 \
                | sed -e 's#source/##' \
                      -e 's/.toml//' \
                      -e '2,$s/^/               /'
        )

        [ -n "$content" -a -n "$empty" ] && continue
        [ -z "$content" -a -n "$full" ] && continue

        [ -z "$content" ] && printf '\e[1m\e[35m'
        printf '%s %s %s\e[0m\n' $datestamp $day "$content"
    done

    count_unscheduled
}

function count_unscheduled {
    unscheduled=$(ag -l 2100 source | wc -l)
    [ -n "$unscheduled" ] && \
        printf '\n\e[1m\e[32mThere are %d unscheduled GIFs.\e[0m\n' $unscheduled
}

function list_unscheduled_gifs {
    ag -l 2100 source \
        | sed -e 's/^source.//' -e 's#/[^/]*$##' \
        | sort \
        | uniq -c \
        | sort -n
}

main "$@"
