#!/usr/bin/env python
"""
Add white, black, and some greys to the end of an image,
as used by FFmpeg's palette functions.

Usage: edit-palette palette.png '#000000' '#ffffff' [...]
"""

import argparse
import sys

from PIL import Image, ImageColor


def main(args):
    image = Image.open(args.palette)
    pixels = image.load()
    index = 254;
    colours = {}
    add = []

    for x in range(0, 16):
        for y in range(0, 16):
            colours[pixels[x,y]] = 1
    orig_count = len(colours)

    for colour in args.colours:
        rgb = ImageColor.getrgb(colour)
        add.append((rgb[0], rgb[1], rgb[2], 255))

    if args.range:
        for crange in args.range:
            for colour in colour_range(*crange):
                add.append(colour)

    for colour in add:
        if colour not in colours:
            x = index % 16
            y = int(index / 16)
            pixels[x,y] = colour
            colours[colour] = 1
            index -= 1
    image.save(args.palette)
    print('    %s colours (%s initially)' % (len(colours), orig_count))

    if args.list:
        for colour in colours:
            print("    '#%02x%02x%02x'," % colour[0:3])

def colour_range(caption, stroke, steps=5):
    caption = ImageColor.getrgb(caption)
    stroke = ImageColor.getrgb(stroke)

    colours = [
        (caption[0], caption[1], caption[2], 255),
        (stroke[0], stroke[1], stroke[2], 255),
    ]

    for step in range(steps - 1, 0, -1):
        mult  = (1 / steps) * step
        red   = caption[0] + int((stroke[0] - caption[0]) * mult)
        green = caption[1] + int((stroke[1] - caption[1]) * mult)
        blue  = caption[2] + int((stroke[2] - caption[2]) * mult)
        colours.append((red, green, blue, 255))

    return colours


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='')
    parser.add_argument(
        '--range',
        nargs=2,
        action='append',
    )
    parser.add_argument(
        '--list',
        action='store_true',
    )
    parser.add_argument(
        'colours',
        nargs='*',
    )
    parser.add_argument('palette')
    main(parser.parse_args(sys.argv[1:]))
